
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND AS ASTERISK CALL COMMA COMMENT COMMENTS CREATE DISCARD END EQUALS EXPORT FROM GREATER_EQUALS GREATER_THAN ID IMPORT JOIN LESS_EQUALS LESS_THAN LIMIT NOT_EQUALS NUMBER PRINT PROCEDURE RENAME SELECT SEMICOLON STRING TABLE USING WHEREprogram : table_command \n| program table_commandtable_command : import_command\n| export_command\n| rename_command\n| print_command\n| discard_commandimport_command : IMPORT TABLE ID FROM STRING SEMICOLONexport_command : EXPORT TABLE ID AS STRING SEMICOLONdiscard_command : DISCARD TABLE ID SEMICOLONrename_command : RENAME TABLE ID STRING SEMICOLONprint_command : PRINT TABLE ID SEMICOLON'
    
_lr_action_items = {'IMPORT':([0,1,2,3,4,5,6,7,13,27,28,31,32,33,],[8,8,-1,-3,-4,-5,-6,-7,-2,-12,-10,-11,-8,-9,]),'EXPORT':([0,1,2,3,4,5,6,7,13,27,28,31,32,33,],[9,9,-1,-3,-4,-5,-6,-7,-2,-12,-10,-11,-8,-9,]),'RENAME':([0,1,2,3,4,5,6,7,13,27,28,31,32,33,],[10,10,-1,-3,-4,-5,-6,-7,-2,-12,-10,-11,-8,-9,]),'PRINT':([0,1,2,3,4,5,6,7,13,27,28,31,32,33,],[11,11,-1,-3,-4,-5,-6,-7,-2,-12,-10,-11,-8,-9,]),'DISCARD':([0,1,2,3,4,5,6,7,13,27,28,31,32,33,],[12,12,-1,-3,-4,-5,-6,-7,-2,-12,-10,-11,-8,-9,]),'$end':([1,2,3,4,5,6,7,13,27,28,31,32,33,],[0,-1,-3,-4,-5,-6,-7,-2,-12,-10,-11,-8,-9,]),'TABLE':([8,9,10,11,12,],[14,15,16,17,18,]),'ID':([14,15,16,17,18,],[19,20,21,22,23,]),'FROM':([19,],[24,]),'AS':([20,],[25,]),'STRING':([21,24,25,],[26,29,30,]),'SEMICOLON':([22,23,26,29,30,],[27,28,31,32,33,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'table_command':([0,1,],[2,13,]),'import_command':([0,1,],[3,3,]),'export_command':([0,1,],[4,4,]),'rename_command':([0,1,],[5,5,]),'print_command':([0,1,],[6,6,]),'discard_command':([0,1,],[7,7,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> table_command','program',1,'p_program','parser.py',12),
  ('program -> program table_command','program',2,'p_program','parser.py',13),
  ('table_command -> import_command','table_command',1,'p_table_command','parser.py',20),
  ('table_command -> export_command','table_command',1,'p_table_command','parser.py',21),
  ('table_command -> rename_command','table_command',1,'p_table_command','parser.py',22),
  ('table_command -> print_command','table_command',1,'p_table_command','parser.py',23),
  ('table_command -> discard_command','table_command',1,'p_table_command','parser.py',24),
  ('import_command -> IMPORT TABLE ID FROM STRING SEMICOLON','import_command',6,'p_import_command','parser.py',28),
  ('export_command -> EXPORT TABLE ID AS STRING SEMICOLON','export_command',6,'p_export_command','parser.py',33),
  ('discard_command -> DISCARD TABLE ID SEMICOLON','discard_command',4,'p_discard_command','parser.py',38),
  ('rename_command -> RENAME TABLE ID STRING SEMICOLON','rename_command',5,'p_rename_commmand','parser.py',43),
  ('print_command -> PRINT TABLE ID SEMICOLON','print_command',4,'p_print_command','parser.py',48),
]
